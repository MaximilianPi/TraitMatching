% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hinteraction.R
\name{findInteractions}
\alias{findInteractions}
\title{findInteractions}
\usage{
findInteractions(
  model,
  data = NULL,
  globalInteractions = TRUE,
  depth = Inf,
  gridSize = 50,
  specificInteractions = NULL,
  nTimes = 2,
  parallel = TRUE
)
}
\arguments{
\item{model}{object fitted by \code{\link[=runTM]{runTM()}}}

\item{globalInteractions}{calculate global interaction strengths of variables (similar to feature importance but for interactions)}

\item{depth}{calculating specific interactions for the top (depth) variables with the highest global interaction strengths}

\item{gridSize}{samples of predictors' values}

\item{specificInteractions}{calculate specific interactions, must be list of type \code{list(a="A1", b=c("B1", "B2"))}}

\item{nTimes}{repeat each calculating n-times}

\item{parallel}{parallel execution or not (will loop over the specificInteraction working list)

increasing the gridSize reduces the variances but is computationally expensive, the same applies for nTimes which repeats the calculation n times to reduce variance.}
}
\description{
find interactions between predictors by using Friedmans H-statistic
}
\examples{
\dontrun{
sim = simulateInteraction(weights = list(main = 0.1, inter = c(0.3,0.3,0.3)))
A = sim$A
B = sim$B
Z = sim$binar()
community = createCommunity(A, B, Z)

result = runTM(community = community, iters = 2L) 
  
Res = findInteractions(result,data = community$data[1:5, -c(1,2)], 
                       gridSize = 3L, depth = 3L, parallel = FALSE)

# Find all interaction strengths
Res = findInteractions(result,data = community$data[1:5, -c(1,2)], 
                       gridSize = 3L) 

# Calculating the global interaction strengths and all possible pair-wise inter-
# actions is computationally expensive, let's calculate the interaction 
# strengths only for a specific set of predictors:
##  Interactions between A1, A2, and B1, B2 (without global interaction strengths):
interList = list(
  list(a = "A1", b = c("B1", "B2")),
  list(a = "A1", b = c("B1", "B2"))
)
Res = findInteractions(result,data = community$data[1:50, -c(1,2)], 
                       gridSize = 10L,
                       globalInteractions = FALSE,
                       specificInteractions = interList,
                       parallel = 2L) 
print(Res)
}
}
